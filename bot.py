# -*- coding: utf-8 -*-
"""bot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yt23DMfVesjfgJZVxXENCQfVos0N_6QD
"""

!pip install transformers

import torch
import json
import random
from torch.utils.data import TensorDataset, DataLoader
from transformers import ElectraTokenizer, ElectraForSequenceClassification, AdamW


tokenizer = ElectraTokenizer.from_pretrained("csebuetnlp/banglabert")


path= "/content/drive/MyDrive/Neural Network project/3lan.json"
with open(path, 'r', encoding='utf-8') as file:
    intents = json.load(file)["intents"]


patterns = []
responses = []

for intent in intents:
    patterns.extend(intent["patterns"])
    responses.extend(intent["responses"])

encoded_inputs = tokenizer(patterns, return_tensors="pt", padding=True, truncation=True, max_length=128)


labels = []
for intent_idx, intent in enumerate(intents):
    labels.extend([intent_idx] * len(intent["patterns"]))
labels = torch.tensor(labels)


dataset = TensorDataset(encoded_inputs["input_ids"], encoded_inputs["attention_mask"], labels)
dataloader = DataLoader(dataset, batch_size=8, shuffle=True)

model = ElectraForSequenceClassification.from_pretrained("csebuetnlp/banglabert", num_labels=len(intents))



optimizer = AdamW(model.parameters(), lr=5e-5)

# Training
epochs = 10
for epoch in range(epochs):
    for batch in dataloader:
        inputs, attention_mask, label = batch
        optimizer.zero_grad()
        outputs = model(inputs, attention_mask=attention_mask, labels=label)
        loss = outputs.loss
        loss.backward()
        optimizer.step()

from google.colab import drive
drive.mount('/content/drive')

# Chat with the trained model
while True:
    user_input = input("You: ")
    if user_input == 'ধন্যবাদ':
        print("Bot: আপনাকেও ধন্যবাদ!")
        break


    encoded_user_input = tokenizer(user_input, return_tensors="pt", padding=True, truncation=True,)


    model_output = model(**encoded_user_input)
    predicted_intent_idx = torch.argmax(model_output.logits).item()


    response_options = intents[predicted_intent_idx]["responses"]

    bot_response = response_options[random.randint(0,len(response_options))]
    print(f"Bot: {bot_response}")